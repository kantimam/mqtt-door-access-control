[{"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\index.js":"1","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\App.js":"2","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\reportWebVitals.js":"3","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\AuthProvider.js":"4","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\key\\KeyList.jsx":"5","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\key\\KeyShow.jsx":"6","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\key\\KeyCreate.jsx":"7","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\key\\KeyEdit.jsx":"8","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\reader\\ReaderList.jsx":"9","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\reader\\ReaderShow.jsx":"10","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\reader\\ReaderEdit.jsx":"11","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\user\\UserList.jsx":"12","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\event\\EventList.jsx":"13","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\newKey\\NewKeyList.jsx":"14","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\user\\UserCreate.jsx":"15","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\user\\UserEdit.jsx":"16","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\access\\AccessList.jsx":"17","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\building\\BuildingCreate.jsx":"18","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\lock\\LockList.jsx":"19","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\building\\BuildingList.jsx":"20","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\lock\\LockCreate.jsx":"21","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\apartment\\ApartmentCreate.jsx":"22","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\apartment\\ApartmentList.jsx":"23","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\dashboard\\index.js":"24","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\reader\\ReaderShowActions.jsx":"25","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\key\\KeyActions.jsx":"26","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\building\\KeyActions.jsx":"27","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\lock\\KeyActions.jsx":"28","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\customFields\\TextButtonField.jsx":"29","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\customFields\\DisabledInput.jsx":"30","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\building\\customViews\\rosenstrasse\\BuildingRosenstrasse.jsx":"31","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\building\\customViews\\rosenstrasse\\ApartmentOne.jsx":"32","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\dashboard\\LockCell.jsx":"33","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\lock\\LockEdit.jsx":"34"},{"size":594,"mtime":1611834956165,"results":"35","hashOfConfig":"36"},{"size":3761,"mtime":1611999566691,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1611834956165,"results":"38","hashOfConfig":"36"},{"size":2306,"mtime":1611834956150,"results":"39","hashOfConfig":"36"},{"size":743,"mtime":1611834956158,"results":"40","hashOfConfig":"36"},{"size":1249,"mtime":1611834956159,"results":"41","hashOfConfig":"36"},{"size":729,"mtime":1611834956157,"results":"42","hashOfConfig":"36"},{"size":532,"mtime":1611834956158,"results":"43","hashOfConfig":"36"},{"size":2030,"mtime":1611834956162,"results":"44","hashOfConfig":"36"},{"size":7092,"mtime":1611834956163,"results":"45","hashOfConfig":"36"},{"size":2014,"mtime":1611834956162,"results":"46","hashOfConfig":"36"},{"size":656,"mtime":1611834956164,"results":"47","hashOfConfig":"36"},{"size":969,"mtime":1611834956157,"results":"48","hashOfConfig":"36"},{"size":733,"mtime":1611834956161,"results":"49","hashOfConfig":"36"},{"size":422,"mtime":1611834956164,"results":"50","hashOfConfig":"36"},{"size":546,"mtime":1611834956164,"results":"51","hashOfConfig":"36"},{"size":940,"mtime":1611834956151,"results":"52","hashOfConfig":"36"},{"size":419,"mtime":1611834956152,"results":"53","hashOfConfig":"36"},{"size":1087,"mtime":1611834956160,"results":"54","hashOfConfig":"36"},{"size":483,"mtime":1611834956152,"results":"55","hashOfConfig":"36"},{"size":2457,"mtime":1611834956160,"results":"56","hashOfConfig":"36"},{"size":583,"mtime":1611834956151,"results":"57","hashOfConfig":"36"},{"size":382,"mtime":1611834956152,"results":"58","hashOfConfig":"36"},{"size":482,"mtime":1611834956156,"results":"59","hashOfConfig":"36"},{"size":3611,"mtime":1611834956163,"results":"60","hashOfConfig":"36"},{"size":1242,"mtime":1611834956157,"results":"61","hashOfConfig":"36"},{"size":1242,"mtime":1611834956153,"results":"62","hashOfConfig":"36"},{"size":1242,"mtime":1611834956159,"results":"63","hashOfConfig":"36"},{"size":702,"mtime":1611834956155,"results":"64","hashOfConfig":"36"},{"size":605,"mtime":1611834956155,"results":"65","hashOfConfig":"36"},{"size":1702,"mtime":1611944020717,"results":"66","hashOfConfig":"36"},{"size":1350,"mtime":1611944905357,"results":"67","hashOfConfig":"36"},{"size":3311,"mtime":1611959544222,"results":"68","hashOfConfig":"36"},{"size":2187,"mtime":1611961188895,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"nxpvz6",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\index.js",[],["150","151"],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\App.js",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\reportWebVitals.js",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\AuthProvider.js",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\key\\KeyList.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\key\\KeyShow.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\key\\KeyCreate.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\key\\KeyEdit.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\reader\\ReaderList.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\reader\\ReaderShow.jsx",["152","153","154","155"],"import React, {useState} from 'react'\r\nimport { Toolbar, SaveButton, Create, SimpleForm, ReferenceField,ReferenceInput, SelectInput, Datagrid, Show, SimpleShowLayout, TextField, DateField, ArrayField, BooleanField, ReferenceManyField, NumberField, useNotify, useRefresh, BooleanInput } from 'react-admin';\r\nimport { LockOpen} from '@material-ui/icons';\r\nimport ReaderShowActions from './ReaderShowActions'\r\nimport TextButtonField from '../customFields/TextButtonField';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst KeyEditToolbar = props => (\r\n    <Toolbar {...props} >\r\n        <SaveButton />\r\n    </Toolbar>\r\n);\r\n\r\nconst ShowPropsExtractor=({children, ...props})=>{\r\n    const notify=useNotify();\r\n    //const refresh=useRefresh();\r\n    const [showDevice, setShow] = useState(false)\r\n\r\n\r\n    const openDoor=async(port)=>{\r\n        try {\r\n            const serverAdress=process.env.REACT_APP_SERVER || \"http://locaholst:5000\";\r\n            const response=await fetch(`${serverAdress}/opendoor/${props.record.id}?port=${port}`)\r\n            await response.json();\r\n            notify(`door ${props.record.id} opened port ${port}`, \"info\")\r\n        } catch (error) {\r\n            console.log(error)\r\n            notify(\"could not open door\", \"error\")\r\n        }\r\n    }\r\n\r\n    const readerKeyRowStyle = (record, _index) => {\r\n        const keys=props?.record?.readerKeys;\r\n        if(!keys) return false;\r\n        return {\r\n            backgroundColor: record && keys && keys.find(key=>{\r\n                return ( \r\n                    key.key.uid === record.uid && \r\n                    key.key.name === record.name &&\r\n                    key.acctype === record.acctype &&\r\n                    key.acctype2 === record.acctype2 &&\r\n                    key.acctype3 === record.acctype3 &&\r\n                    key.acctype4 === record.acctype4 /* &&\r\n                    key.acctype5 === record.acctype5 &&\r\n                    key.acctype6 === record.acctype6 */) // add back valid until later \r\n            }) ? '#efe' : 'white',\r\n        }\r\n    }\r\n\r\n    const onSuccess = () => {\r\n        notify(`successfully added key to reader`)\r\n        //refresh();\r\n    };\r\n\r\n    return (\r\n        <SimpleShowLayout {...props}>\r\n            <TextField source=\"readerName\" />\r\n            <TextField source=\"ip\" />\r\n            <DateField source=\"lastPing\" showTime locales=\"de\"/>\r\n            \r\n            <ReferenceField label=\"Apartment\" reference=\"apartment\" source=\"apartmentId\" link=\"show\">\r\n                <TextField source=\"name\"/>\r\n            </ReferenceField>\r\n            \r\n            <ArrayField label=\"CONNECTED LOCKS\" source=\"locks\" >\r\n                <Datagrid>\r\n                    <TextField label=\"name\" source=\"name\" />\r\n                    <NumberField source=\"slot\" />\r\n                </Datagrid>\r\n            </ArrayField>\r\n\r\n            {/* <TextButtonField onClick={()=>openDoor(1)} label=\"Relay 1 (acctype)\" variant=\"contained\" source=\"acctypeName\">\r\n                <LockOpen/>\r\n            </TextButtonField>\r\n            <TextButtonField onClick={()=>openDoor(2)} label=\"Relay 2 (acctype2)\" variant=\"contained\" source=\"acctype2Name\">\r\n                <LockOpen/>\r\n            </TextButtonField>\r\n            <TextButtonField onClick={()=>openDoor(3)} label=\"Relay 3 (acctype3)\" variant=\"contained\" source=\"acctype3Name\">\r\n                <LockOpen/>\r\n            </TextButtonField>\r\n            <TextButtonField onClick={()=>openDoor(4)} label=\"Relay 4 (acctype4)\" variant=\"contained\" source=\"acctype4Name\">\r\n                <LockOpen/>\r\n            </TextButtonField>\r\n            <TextButtonField onClick={()=>openDoor(5)} label=\"Relay 5 (acctype5)\" variant=\"contained\" source=\"acctype4Name\">\r\n                <LockOpen/>\r\n            </TextButtonField>\r\n            <TextButtonField onClick={()=>openDoor(6)} label=\"Relay 6 (acctype6)\" variant=\"contained\" source=\"acctype4Name\">\r\n                <LockOpen/>\r\n            </TextButtonField> */}\r\n            \r\n            {/* TODO MAKE THIS GRID HAVING IT STACKED ON DESKTOP GETS MESSY */}\r\n            <Create title=\" \" resource={props.resource} onSuccess={onSuccess}>\r\n                <SimpleForm toolbar={<KeyEditToolbar/>}>\r\n                    <ReferenceInput label=\"ADD KEY TO READER\" reference=\"key\" source=\"key_id\"  required>\r\n                        <SelectInput optionText=\"name\" />\r\n                    </ReferenceInput>\r\n                    <BooleanInput label=\"acctype\"  source=\"acctype\"/>\r\n                    <BooleanInput label=\"acctype2\" source=\"acctype2\"/>\r\n                    <BooleanInput label=\"acctype3\" source=\"acctype3\"/>\r\n                    <BooleanInput label=\"acctype4\" source=\"acctype4\"/>\r\n                    <BooleanInput label=\"acctype5\" source=\"acctype5\"/>\r\n                    <BooleanInput label=\"acctype6\" source=\"acctype6\"/>\r\n                </SimpleForm>\r\n            </Create>\r\n\r\n            {/*TODO: make this a referencefield too after creating the route  */}\r\n            <ArrayField label=\"KEYS IN THE DB\" source=\"readerKeys\" >\r\n                <Datagrid>\r\n                    <TextField label=\"name\" source=\"key.name\" />\r\n                    <TextField label=\"UID\" source=\"key.uid\" />\r\n                    <DateField label=\"valid\" source=\"key.validUntil\" showTime locales=\"de\"/>\r\n                    <BooleanField label=\"one time\" source=\"key.isOneTimeCode\" />\r\n                    <NumberField source=\"acctype\"  />\r\n                    <NumberField source=\"acctype2\" />\r\n                    <NumberField source=\"acctype3\" />\r\n                    <NumberField source=\"acctype4\" />\r\n                    <NumberField source=\"acctype5\" />\r\n                    <NumberField source=\"acctype6\" />\r\n                </Datagrid>\r\n            </ArrayField>\r\n\r\n            <Button onClick={()=>setShow(!showDevice)} variant=\"contained\" color={showDevice? \"primary\" : \"secondary\"}>\r\n                {`${ showDevice? \"HIDE\" : \"SHOW\" } DEVICE KEYS`}\r\n            </Button>\r\n\r\n            {showDevice && <ReferenceManyField reference=\"devicekey\" target=\"readerId\" label=\"KEYS ON READER\" {...props}>\r\n                <Datagrid rowStyle={readerKeyRowStyle} {...props}>\r\n                    <TextField source=\"name\" />\r\n                    <TextField source=\"uid\" />\r\n                    <DateField source=\"validUntil\" showTime locales=\"de\"/>\r\n                    {/* <BooleanField label=\"one time\" source=\"isOneTimeCode\" /> */}\r\n                    <NumberField source=\"acctype\" />\r\n                    <NumberField source=\"acctype2\" />\r\n                    <NumberField source=\"acctype3\" />\r\n                    <NumberField source=\"acctype4\" />\r\n                    <NumberField source=\"acctype5\" />\r\n                    <NumberField source=\"acctype6\" />\r\n                </Datagrid>\r\n            </ReferenceManyField>}\r\n            \r\n\r\n        </SimpleShowLayout>\r\n    )\r\n}\r\n\r\n\r\nconst ReaderShow = (props) => {\r\n    return (\r\n        <Show  actions={<ReaderShowActions/>}  {...props}>\r\n            <ShowPropsExtractor/>\r\n        </Show>\r\n    )\r\n}\r\n\r\nexport default ReaderShow\r\n","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\reader\\ReaderEdit.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\user\\UserList.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\event\\EventList.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\newKey\\NewKeyList.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\user\\UserCreate.jsx",["156","157","158","159"],"import * as React from \"react\";\r\nimport { Create, SimpleForm, TextInput, BooleanInput, DateTimeInput, ReferenceInput, SelectInput } from 'react-admin';\r\n\r\n\r\n\r\nconst UserCreate = (props) => (\r\n    <Create title=\"Create a User\"  {...props} >\r\n        <SimpleForm>\r\n            <TextInput source=\"username\" />\r\n            <TextInput source=\"password\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);\r\n\r\nexport default UserCreate","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\user\\UserEdit.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\access\\AccessList.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\building\\BuildingCreate.jsx",["160","161","162","163"],"// in posts.js\r\nimport * as React from \"react\";\r\nimport { Create, SimpleForm, TextInput, BooleanInput, DateTimeInput, ReferenceInput, SelectInput } from 'react-admin';\r\n\r\n\r\n\r\n\r\n\r\nconst BuildingCreate = (props) => (\r\n    <Create title=\"Create a Building\"  {...props} >\r\n        <SimpleForm>\r\n            <TextInput source=\"name\" />\r\n            \r\n        </SimpleForm>\r\n    </Create>\r\n);\r\n\r\nexport default BuildingCreate","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\lock\\LockList.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\building\\BuildingList.jsx",["164","165"],"// in posts.js\r\nimport * as React from \"react\";\r\nimport { List, Datagrid, TextField, EditButton, NumberField, ReferenceField} from 'react-admin';\r\nimport KeyActions from \"./KeyActions\";\r\n\r\nexport const BuildingList = (props) => (\r\n    <List \r\n        actions={<KeyActions/>} \r\n        {...props} \r\n    >\r\n        <Datagrid rowClick=\"show\">\r\n            <TextField source=\"name\"/>\r\n            <EditButton/>\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\n\r\n\r\n\r\n\r\nexport default BuildingList","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\lock\\LockCreate.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\apartment\\ApartmentCreate.jsx",["166","167"],"// in posts.js\r\nimport * as React from \"react\";\r\nimport { Create, SimpleForm, TextInput, BooleanInput, DateTimeInput, ReferenceInput, SelectInput } from 'react-admin';\r\n\r\n\r\n\r\n\r\n\r\nconst ApartmentCreate = (props) => (\r\n    <Create title=\"Create a Building\"  {...props} >\r\n        <SimpleForm>\r\n            <TextInput source=\"name\" />\r\n            <ReferenceInput reference=\"building\" source=\"buildingId\"  allowEmpty {...props}>\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n        </SimpleForm>\r\n    </Create>\r\n);\r\n\r\nexport default ApartmentCreate","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\apartment\\ApartmentList.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\dashboard\\index.js",["168"],"import { Card, CardContent, CardHeader, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport BuildingRosenstrasse from '../building/customViews/rosenstrasse/BuildingRosenstrasse'\r\n\r\nconst Dashboard = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <Card>\r\n            <CardHeader title=\"Dashboard\"/>\r\n            <CardContent>\r\n                <BuildingRosenstrasse/>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\reader\\ReaderShowActions.jsx",["169"],"import * as React from 'react';\r\nimport { DeleteForever, LockOpen, SystemUpdate} from '@material-ui/icons';\r\nimport {\r\n    TopToolbar,\r\n    Button,\r\n    useNotify,\r\n    useRefresh,\r\n    fetchStart,\r\n    fetchEnd,\r\n    EditButton\r\n} from 'react-admin';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst serverAdress=process.env.REACT_APP_SERVER || \"http://locaholst:5000\";\r\n\r\n\r\nconst ReaderShowActions = ({ basePath, data, resource }) => {\r\n    /* TODO PASS OPEN DOOR THROUGH PROPS */\r\n    const notify=useNotify();\r\n    const refresh=useRefresh();\r\n    const dispatch=useDispatch();\r\n    \r\n    /* const openDoor=async(port)=>{\r\n        try {\r\n            const response=await fetch(`${serverAdress}/opendoor/${data.id}?port=${port}`)\r\n            await response.json();\r\n            notify(`door ${data.id} opened port ${port}`, \"info\")\r\n        } catch (error) {\r\n            console.log(error)\r\n            notify(\"could not open door\", \"error\")\r\n\r\n        }\r\n    } */\r\n\r\n    const deleteAllKeys=async()=>{\r\n        try {\r\n            dispatch(fetchStart());\r\n            notify(\"started deleting all keys this could take around 5 seconds\", \"info\");\r\n            const response=await fetch(`${serverAdress}/deleteall/${data.id}`)\r\n            const json=await response.json();\r\n            dispatch(fetchEnd());\r\n            notify(json.message? json.message :`reader ${data.id} deleted all keys. Reader keys will be refreshed shortly`, \"info\")\r\n            setTimeout(refresh, 4000);\r\n        } catch (error) {\r\n            dispatch(fetchEnd());\r\n            console.log(error)\r\n            notify(`could not delete keys on reader ${data.id}`, \"error\")\r\n\r\n        }\r\n    }\r\n\r\n    const syncAllKeys=async()=>{\r\n        try {\r\n            dispatch(fetchStart());\r\n            notify(\"started syncing please wait\", \"info\")\r\n            const response=await fetch(`${serverAdress}/syncall/${data.id}`)\r\n            await response.json();\r\n            dispatch(fetchEnd());\r\n            //notify(json.message? json.message :`reader ${data.id} synced all keys`, \"info\")\r\n            notify(`reader ${data.id} synced all keys`, \"info\");\r\n            setTimeout(refresh, 6000);\r\n        } catch (error) {\r\n            dispatch(fetchEnd());\r\n            console.log(error)\r\n            notify(`failed to sync to reader ${data.id}`, \"error\")\r\n\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    const marginLeft={marginLeft: \"8px\"}\r\n\r\n    return(\r\n        <TopToolbar >\r\n            <EditButton basePath={basePath} record={data}/>\r\n            {/* <Button style={marginLeft} label=\"OPEN 1\" color=\"primary\" variant=\"contained\" onClick={()=>openDoor(1)}>\r\n                <LockOpen/>\r\n            </Button>\r\n            <Button style={marginLeft} label=\"OPEN 2\" color=\"primary\" variant=\"contained\" onClick={()=>openDoor(2)}>\r\n                <LockOpen/>\r\n            </Button>\r\n            <Button style={marginLeft} label=\"OPEN 3\" color=\"primary\" variant=\"contained\" onClick={()=>openDoor(3)}>\r\n                <LockOpen/>\r\n            </Button>\r\n            <Button style={marginLeft} label=\"OPEN 4\" color=\"primary\" variant=\"contained\" onClick={()=>openDoor(4)}>\r\n                <LockOpen/>\r\n            </Button> */}\r\n            <Button style={marginLeft} label=\"SYNC\" color=\"secondary\" variant=\"contained\" onClick={syncAllKeys}>\r\n                <SystemUpdate/>\r\n            </Button>\r\n            <Button style={marginLeft} label=\"DELETE\" color=\"secondary\" variant=\"contained\" onClick={deleteAllKeys}>\r\n                <DeleteForever/>\r\n            </Button>\r\n        </TopToolbar>\r\n    )\r\n};\r\n\r\nexport default ReaderShowActions","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\key\\KeyActions.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\building\\KeyActions.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\lock\\KeyActions.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\customFields\\TextButtonField.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\customFields\\DisabledInput.jsx",[],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\building\\customViews\\rosenstrasse\\BuildingRosenstrasse.jsx",["170","171"],"import { useState, useEffect } from 'react'\r\nimport { Box, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport ApartmentOne from './ApartmentOne'\r\nimport LockCell from '../../../dashboard/LockCell'\r\n\r\n\r\n\r\nconst BuildingRosenstrasse = (props) => {\r\n    const [modalOpen, setOpen]=useState(false);\r\n    const [building, setBuilding]=useState({});\r\n    /* get data for building rosenstrasse */\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5000/api/building/1`)\r\n            .then(data=>data.json())\r\n            .then(json=>setBuilding(json))\r\n            .catch(error=>console.log(error))\r\n        \r\n    }, [])\r\n\r\n    console.log(building)\r\n    return (\r\n        <Box display=\"inline-block\">\r\n            <Typography variant=\"h5\">\r\n                Gebäude Rosenstraße\r\n            </Typography>\r\n            {building && building.apartments?\r\n                <Box position=\"relative\" /* bgcolor=\"blue\" */ display=\"flex\" flexDirection=\"column\">\r\n                    <LockCell customLabel=\"Eingang Rosenstraße\" lock={building.buildingLock}/>\r\n                    <Box \r\n                        display=\"flex\" \r\n                        flexWrap=\"wrap\"\r\n                        justifyContent=\"center\"\r\n                        border=\"2px solid grey\"\r\n                        borderRadius={4} \r\n                    >\r\n                        {building?.apartments.map(apartment=><ApartmentOne apartment={apartment}/>)}{/* Apartments */}\r\n                    </Box>\r\n                </Box>\r\n                :\r\n                <Typography>building could not be found</Typography>\r\n            }\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BuildingRosenstrasse\r\n","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\building\\customViews\\rosenstrasse\\ApartmentOne.jsx",["172"],"import { Box, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport LockCell from '../../../dashboard/LockCell'\r\n\r\nconst LockOrNull=({lock})=>lock? <LockCell lock={lock}/> : null;\r\n\r\nconst ApartmentOne = ({apartment={}, props}) => {\r\n    // sort locks by their slot on the reader\r\n    const sortedLocks=apartment.locks && apartment.locks.length\r\n        ? apartment.locks.sort((lockA, lockB)=>lockA.slot-lockB.slot)\r\n        : []\r\n    console.log(sortedLocks)\r\n\r\n    return (\r\n        <Box marginX=\"auto\">\r\n            <Typography align=\"center\" variant=\"h6\">{apartment.name}</Typography>\r\n            <Box display=\"flex\" margin={2}>\r\n                <Box id=\"links\" display=\"flex\" flexDirection=\"column\">\r\n                    <LockCell lock={sortedLocks[0]}/>\r\n                    <LockCell lock={sortedLocks[1]}/>\r\n                </Box>\r\n                <LockCell lock={apartment.apartmentLock }/>\r\n                <Box id=\"rechts\" display=\"flex\" justifyContent=\"stretch\" flexDirection=\"column\">\r\n                    <LockCell lock={sortedLocks[2]}/>\r\n                    <LockCell lock={sortedLocks[3]}/>\r\n                    <LockCell lock={sortedLocks[4]}/>\r\n                    <LockCell lock={sortedLocks[5]}/>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n        \r\n    )\r\n}\r\n\r\nexport default ApartmentOne\r\n",["173","174"],"C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\dashboard\\LockCell.jsx",["175","176","177"],"import React, {useState, useRef} from 'react'\r\nimport Box from '@material-ui/core/Box'\r\nimport { styled, Menu, MenuItem } from '@material-ui/core';\r\nimport {Add} from '@material-ui/icons';\r\nimport {useRedirect, useNotify} from 'react-admin'\r\n\r\n\r\nconst Cell=styled(Box)({\r\n    margin: \"1px\",\r\n    transition: \"0.2s\",\r\n    cursor: \"pointer\",\r\n    boxSizing: \"border-box\",\r\n    border: \"2px solid rgba(100,100,100,0.4)\",\r\n    borderRadius: \"4px\",\r\n    overflow: \"hidden\",\r\n    display: \"inline-flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    '&:hover': {\r\n        transform: \"scale(1.04)\"\r\n    }\r\n})\r\n\r\nconst LockCell = (props) => props.lock? <ValidLockCell {...props} /> : <EmptyLockCell/>\r\n\r\n\r\nconst ValidLockCell=({\r\n    lock,\r\n    customLabel, \r\n    style={}, \r\n    colors={\r\n        open: \"green\",\r\n        closed: \"red\",\r\n        taken: \"orange\",\r\n        free: \"grey\"\r\n    },\r\n    onClick, \r\n    ...props\r\n})=>{\r\n    const redirect=useRedirect();\r\n    const notify=useNotify();\r\n    //const [menuOpen, setOpen]=useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open=!!anchorEl;\r\n\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    const openLock=async()=>{\r\n        try {\r\n            notify(`started opening lock ${lock.name}`, \"info\")\r\n            const res=await fetch(`${\"http://localhost:5000/api\"}/opendoor/${lock.readerId}?port=${lock.slot}`)\r\n            //const json=await res.json();\r\n            notify(`successfully opened lock ${lock.name}`, \"info\")\r\n        } catch (error) {\r\n            notify(`could not open lock ${lock.name}`, \"warning\")\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const redirectToLock=()=>redirect(`/lock/${lock.id}`)\r\n\r\n    const label=customLabel || lock.number || lock.name\r\n\r\n    return (\r\n        <>\r\n            <Cell \r\n                padding={2} \r\n                bgcolor={lock.open? colors.open : colors.closed} \r\n                flex={1}\r\n                style={style}\r\n                onClick={handleMenu}\r\n            >\r\n                {label}\r\n            </Cell>\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                //getContentAnchorEl={null}\r\n                //elevation={0}\r\n                anchorEl={anchorEl}\r\n                color=\"default\"\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={openLock}>Open</MenuItem>\r\n                <MenuItem onClick={redirectToLock}>Manage</MenuItem>\r\n            </Menu>\r\n           \r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nconst EmptyLockCell=()=>{\r\n    const redirect=useRedirect();\r\n\r\n    return (\r\n        <Cell \r\n            padding={2} \r\n            bgcolor={\"lightgrey\"} \r\n            flex={1}\r\n            onClick={()=>redirect(`/lock/create`)}\r\n        >\r\n            <Add/>\r\n        </Cell> \r\n    )\r\n}\r\n\r\nexport default LockCell\r\n","C:\\Users\\kante\\Desktop\\mqtt-door-access-control\\client\\src\\components\\lock\\LockEdit.jsx",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":2,"column":221,"nodeType":"184","messageId":"185","endLine":2,"endColumn":231},{"ruleId":"182","severity":1,"message":"186","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":18},{"ruleId":"182","severity":1,"message":"187","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":23},{"ruleId":"182","severity":1,"message":"188","line":21,"column":11,"nodeType":"184","messageId":"185","endLine":21,"endColumn":19},{"ruleId":"182","severity":1,"message":"189","line":2,"column":41,"nodeType":"184","messageId":"185","endLine":2,"endColumn":53},{"ruleId":"182","severity":1,"message":"190","line":2,"column":55,"nodeType":"184","messageId":"185","endLine":2,"endColumn":68},{"ruleId":"182","severity":1,"message":"191","line":2,"column":70,"nodeType":"184","messageId":"185","endLine":2,"endColumn":84},{"ruleId":"182","severity":1,"message":"192","line":2,"column":86,"nodeType":"184","messageId":"185","endLine":2,"endColumn":97},{"ruleId":"182","severity":1,"message":"189","line":3,"column":41,"nodeType":"184","messageId":"185","endLine":3,"endColumn":53},{"ruleId":"182","severity":1,"message":"190","line":3,"column":55,"nodeType":"184","messageId":"185","endLine":3,"endColumn":68},{"ruleId":"182","severity":1,"message":"191","line":3,"column":70,"nodeType":"184","messageId":"185","endLine":3,"endColumn":84},{"ruleId":"182","severity":1,"message":"192","line":3,"column":86,"nodeType":"184","messageId":"185","endLine":3,"endColumn":97},{"ruleId":"182","severity":1,"message":"193","line":3,"column":49,"nodeType":"184","messageId":"185","endLine":3,"endColumn":60},{"ruleId":"182","severity":1,"message":"194","line":3,"column":62,"nodeType":"184","messageId":"185","endLine":3,"endColumn":76},{"ruleId":"182","severity":1,"message":"189","line":3,"column":41,"nodeType":"184","messageId":"185","endLine":3,"endColumn":53},{"ruleId":"182","severity":1,"message":"190","line":3,"column":55,"nodeType":"184","messageId":"185","endLine":3,"endColumn":68},{"ruleId":"182","severity":1,"message":"195","line":1,"column":41,"nodeType":"184","messageId":"185","endLine":1,"endColumn":51},{"ruleId":"182","severity":1,"message":"186","line":2,"column":25,"nodeType":"184","messageId":"185","endLine":2,"endColumn":33},{"ruleId":"182","severity":1,"message":"196","line":10,"column":12,"nodeType":"184","messageId":"185","endLine":10,"endColumn":21},{"ruleId":"182","severity":1,"message":"197","line":10,"column":23,"nodeType":"184","messageId":"185","endLine":10,"endColumn":30},{"ruleId":"182","severity":1,"message":"198","line":5,"column":7,"nodeType":"184","messageId":"185","endLine":5,"endColumn":17},{"ruleId":"178","replacedBy":"199"},{"ruleId":"180","replacedBy":"200"},{"ruleId":"182","severity":1,"message":"201","line":1,"column":16,"nodeType":"184","messageId":"185","endLine":1,"endColumn":24},{"ruleId":"182","severity":1,"message":"202","line":1,"column":26,"nodeType":"184","messageId":"185","endLine":1,"endColumn":32},{"ruleId":"182","severity":1,"message":"203","line":59,"column":19,"nodeType":"184","messageId":"185","endLine":59,"endColumn":22},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'useRefresh' is defined but never used.","Identifier","unusedVar","'LockOpen' is defined but never used.","'TextButtonField' is defined but never used.","'openDoor' is assigned a value but never used.","'BooleanInput' is defined but never used.","'DateTimeInput' is defined but never used.","'ReferenceInput' is defined but never used.","'SelectInput' is defined but never used.","'NumberField' is defined but never used.","'ReferenceField' is defined but never used.","'Typography' is defined but never used.","'modalOpen' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'LockOrNull' is assigned a value but never used.",["204"],["205"],"'useState' is defined but never used.","'useRef' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]